{"type":"route","meta":{"status":200,"headers":{"content-type":"text/markdown","x-next-cache-tags":"_N_T_/layout,_N_T_/llms.mdx/layout,_N_T_/llms.mdx/[[...slug]]/layout,_N_T_/llms.mdx/[[...slug]]/route,_N_T_/llms.mdx/community-support/contributing"}},"body":"# Contributing (/docs/community-support/contributing)\n\nHelp improve Hackmamba by contributing to our project and community.\n\n## Ways to Contribute\n\n### Code Contributions\n\n#### Bug Fixes\n\n* **Report bugs** through GitHub Issues\n* **Fix bugs** and submit pull requests\n* **Test fixes** thoroughly before submitting\n\n#### Feature Development\n\n* **Propose features** through GitHub Discussions\n* **Implement features** following our guidelines\n* **Write tests** for new functionality\n\n#### Documentation\n\n* **Improve existing docs** with clarifications\n* **Add missing documentation** for features\n* **Fix typos** and improve readability\n\n### Community Contributions\n\n#### Answer Questions\n\n* **Help in Discord** - Answer questions in real-time\n* **GitHub Discussions** - Provide detailed answers\n* **Stack Overflow** - Help with tagged questions\n\n#### Share Knowledge\n\n* **Write tutorials** and guides\n* **Create code examples** and samples\n* **Share integration stories**\n\n#### Translation\n\n* **Translate documentation** to other languages\n* **Localize content** for different regions\n* **Maintain translations** over time\n\n## Getting Started\n\n### Prerequisites\n\n* **Git** - Version control\n* **Node.js** - v18 or higher\n* **npm** - Package manager\n* **Code Editor** - VS Code recommended\n\n### Setup Development Environment\n\n1. **Fork the repository**\n\n   ```bash\n   # Fork on GitHub, then clone\n   git clone https://github.com/your-username/hackmamba.git\n   cd hackmamba\n   ```\n\n2. **Install dependencies**\n\n   ```bash\n   npm install\n   ```\n\n3. **Set up environment**\n\n   ```bash\n   cp .env.example .env.local\n   # Edit .env.local with your values\n   ```\n\n4. **Start development server**\n   ```bash\n   npm run dev\n   ```\n\n### Development Workflow\n\n1. **Create a branch**\n\n   ```bash\n   git checkout -b feature/your-feature-name\n   ```\n\n2. **Make changes**\n\n   * Write code following our style guide\n   * Add tests for new functionality\n   * Update documentation as needed\n\n3. **Test your changes**\n\n   ```bash\n   npm test\n   npm run lint\n   npm run build\n   ```\n\n4. **Commit changes**\n\n   ```bash\n   git add .\n   git commit -m \"feat: add new feature\"\n   ```\n\n5. **Push and create PR**\n   ```bash\n   git push origin feature/your-feature-name\n   # Create pull request on GitHub\n   ```\n\n## Code Style Guide\n\n### JavaScript/TypeScript\n\n* **Use TypeScript** for new code\n* **Follow ESLint rules** - configured in project\n* **Use Prettier** for code formatting\n* **Write meaningful names** for variables and functions\n\n```typescript\n// Good\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n}\n\nasync function createUser(userData: CreateUserRequest): Promise<User> {\n  // Implementation\n}\n\n// Bad\ninterface u {\n  i: string;\n  n: string;\n  e: string;\n}\n\nasync function create(u: any): Promise<any> {\n  // Implementation\n}\n```\n\n### Documentation\n\n* **Use Markdown** for documentation\n* **Include examples** in code blocks\n* **Write clear descriptions** for functions and classes\n* **Update README** for significant changes\n\n````markdown\n## Function Name\n\nBrief description of what the function does.\n\n### Parameters\n\n- `param1` (string): Description of parameter\n- `param2` (number): Description of parameter\n\n### Returns\n\nDescription of return value.\n\n### Example\n\n```typescript\nconst result = functionName(\"example\", 123);\nconsole.log(result); // Expected output\n```\n````\n\n````\n\n## Pull Request Guidelines\n\n### Before Submitting\n\n- [ ] **Code follows** style guidelines\n- [ ] **Tests pass** locally\n- [ ] **Documentation updated** if needed\n- [ ] **No console errors** or warnings\n- [ ] **Feature works** as expected\n\n### PR Description\n\nInclude the following in your PR description:\n\n- **What** - What changes are made\n- **Why** - Why these changes are needed\n- **How** - How the changes work\n- **Testing** - How to test the changes\n\n### Example PR Description\n\n```markdown\n## What\nAdds user creation API endpoint with validation.\n\n## Why\nUsers need a way to create new accounts through the API.\n\n## How\n- Added POST /v1/users endpoint\n- Implemented input validation\n- Added error handling for duplicate emails\n- Created comprehensive tests\n\n## Testing\n- Run `npm test` to run all tests\n- Test with Postman collection in /docs/api\n- Verify error handling with invalid data\n````\n\n## Issue Guidelines\n\n### Bug Reports\n\nUse the bug report template:\n\n```markdown\n## Bug Description\n\nBrief description of the bug.\n\n## Steps to Reproduce\n\n1. Go to '...'\n2. Click on '...'\n3. See error\n\n## Expected Behavior\n\nWhat should happen.\n\n## Actual Behavior\n\nWhat actually happens.\n\n## Environment\n\n- OS: [e.g., Windows 10]\n- Browser: [e.g., Chrome 91]\n- Version: [e.g., 1.2.3]\n\n## Additional Context\n\nAny other context about the problem.\n```\n\n### Feature Requests\n\nUse the feature request template:\n\n```markdown\n## Feature Description\n\nBrief description of the feature.\n\n## Problem Statement\n\nWhat problem does this solve?\n\n## Proposed Solution\n\nHow should this work?\n\n## Alternatives Considered\n\nWhat other solutions were considered?\n\n## Additional Context\n\nAny other context or screenshots.\n```\n\n## Community Guidelines\n\n### Code of Conduct\n\n* **Be respectful** and inclusive\n* **Be constructive** in feedback\n* **Be patient** with newcomers\n* **Be collaborative** in discussions\n\n### Communication\n\n* **Use clear language** in issues and PRs\n* **Be specific** about problems and solutions\n* **Ask questions** when unclear\n* **Help others** when you can\n\n## Recognition\n\n### Contributors\n\nWe recognize contributors in several ways:\n\n* **Contributor badges** on GitHub\n* **Hall of Fame** in documentation\n* **Swag** for significant contributions\n* **Conference speaking** opportunities\n\n### Types of Contributions\n\n* **Code** - Bug fixes, features, tests\n* **Documentation** - Guides, examples, translations\n* **Community** - Helping others, answering questions\n* **Design** - UI/UX improvements, graphics\n\n## Getting Help\n\n### Questions About Contributing\n\n* **GitHub Discussions** - General questions\n* **Discord** - Real-time help\n* **Email** - [contributors@hackmamba.com](mailto:contributors@hackmamba.com)\n\n### Mentorship\n\n* **New contributor** program\n* **Pair programming** sessions\n* **Code review** guidance\n* **Learning resources**\n\n<Cards>\n  <Card title=\"Community\" href=\"/docs/community\" description=\"Join our developer community\" />\n\n  <Card title=\"Support\" href=\"/docs/support\" description=\"Get technical support\" />\n\n  <Card title=\"Feedback\" href=\"/docs/feedback\" description=\"Share your feedback\" />\n</Cards>\n"}