{"type":"route","meta":{"status":200,"headers":{"content-type":"text/markdown","x-next-cache-tags":"_N_T_/layout,_N_T_/llms.mdx/layout,_N_T_/llms.mdx/[[...slug]]/layout,_N_T_/llms.mdx/[[...slug]]/route,_N_T_/llms.mdx/community-support/feedback"}},"body":"# Feedback (/docs/community-support/feedback)\n\nYour feedback helps us improve Hackmamba and make it better for everyone.\n\n## How to Share Feedback\n\n### Quick Feedback\n\nFor quick feedback and suggestions:\n\n* **Discord** - Share in `#feedback` channel\n* **GitHub Discussions** - Post in \"Feedback\" category\n* **Email** - [feedback@hackmamba.com](mailto:feedback@hackmamba.com)\n\n### Detailed Feedback\n\nFor detailed feedback and feature requests:\n\n* **GitHub Issues** - Use feature request template\n* **Survey** - Complete our quarterly feedback survey\n* **Interview** - Participate in user research sessions\n\n## Types of Feedback\n\n### Product Feedback\n\nHelp us improve the product:\n\n* **Feature requests** - What features do you need?\n* **UI/UX feedback** - How can we improve the interface?\n* **Performance** - Are there performance issues?\n* **Usability** - What's confusing or difficult?\n\n### Documentation Feedback\n\nHelp us improve our documentation:\n\n* **Missing information** - What's not documented?\n* **Unclear explanations** - What's confusing?\n* **Incorrect information** - What's wrong?\n* **Better examples** - What examples would help?\n\n### API Feedback\n\nHelp us improve our API:\n\n* **Missing endpoints** - What endpoints do you need?\n* **Response format** - How can responses be better?\n* **Error messages** - Are error messages helpful?\n* **Rate limits** - Are limits appropriate?\n\n## Feedback Guidelines\n\n### Be Specific\n\nInstead of:\n\n> \"The API is hard to use\"\n\nSay:\n\n> \"The user creation endpoint requires too many optional fields, making it confusing to know what's required\"\n\n### Provide Context\n\nInclude relevant information:\n\n* **Use case** - What are you trying to accomplish?\n* **Environment** - What's your setup?\n* **Impact** - How does this affect your work?\n\n### Suggest Solutions\n\nWhen possible, suggest solutions:\n\n* **Alternative approaches** - How could this work better?\n* **Examples** - What would good examples look like?\n* **Priorities** - How important is this to you?\n\n## Feedback Examples\n\n### Good Feedback\n\n````markdown\n## Feature Request: Batch User Creation\n\n### Use Case\n\nWe need to create hundreds of users at once during our onboarding process. Currently, we have to make individual API calls for each user, which is slow and hits rate limits.\n\n### Current Workaround\n\nWe're using Promise.all() with individual API calls, but this often fails due to rate limiting.\n\n### Proposed Solution\n\nAdd a batch endpoint like POST /v1/users/batch that accepts an array of user objects and returns an array of results.\n\n### Example API\n\n```json\nPOST /v1/users/batch\n{\n  \"users\": [\n    {\"name\": \"User 1\", \"email\": \"user1@example.com\"},\n    {\"name\": \"User 2\", \"email\": \"user2@example.com\"}\n  ]\n}\n```\n````\n\n### Priority\n\nHigh - This would significantly improve our onboarding process.\n\n````\n\n### Documentation Feedback\n\n```markdown\n## Documentation Issue: Missing Error Codes\n\n### Problem\nThe API reference doesn't list all possible error codes. When we get a 400 error, we don't know what specific error code to handle.\n\n### Location\n/docs/api-reference - Error Handling section\n\n### Suggested Fix\nAdd a complete list of error codes with descriptions and examples.\n\n### Example\n```json\n{\n  \"error\": {\n    \"code\": \"invalid_email_format\",\n    \"message\": \"The email address format is invalid\",\n    \"field\": \"email\"\n  }\n}\n````\n\n````\n\n## Feedback Process\n\n### How We Handle Feedback\n\n1. **Collection** - We collect feedback from multiple channels\n2. **Review** - Product team reviews all feedback\n3. **Prioritization** - We prioritize based on impact and effort\n4. **Planning** - We plan features and improvements\n5. **Implementation** - We build and test changes\n6. **Communication** - We update the community on progress\n\n### Response Times\n\n- **Acknowledgment** - Within 1-2 business days\n- **Initial response** - Within 1 week\n- **Status updates** - Monthly for major requests\n\n## User Research\n\n### Participate in Research\n\nHelp us understand your needs:\n\n- **User interviews** - 30-minute video calls\n- **Usability testing** - Test new features\n- **Surveys** - Quick feedback on specific topics\n- **Beta testing** - Early access to new features\n\n### Research Benefits\n\n- **Early access** to new features\n- **Influence** product direction\n- **Recognition** as a beta tester\n- **Swag** and rewards\n\n## Feature Requests\n\n### Submitting Feature Requests\n\n1. **Check existing requests** - Search GitHub Issues first\n2. **Use template** - Use our feature request template\n3. **Provide details** - Include use case and examples\n4. **Vote on others** - Vote on existing requests\n\n### Feature Request Template\n\n```markdown\n## Feature Description\nBrief description of the feature.\n\n## Problem Statement\nWhat problem does this solve?\n\n## Proposed Solution\nHow should this work?\n\n## Use Cases\n- Use case 1\n- Use case 2\n- Use case 3\n\n## Alternatives Considered\nWhat other solutions were considered?\n\n## Additional Context\nAny other context or screenshots.\n````\n\n## Bug Reports\n\n### Reporting Bugs\n\n1. **Search existing issues** - Check if already reported\n2. **Use bug template** - Use our bug report template\n3. **Include details** - Steps to reproduce, environment, etc.\n4. **Test in sandbox** - Verify in test environment first\n\n## Community Feedback\n\n### Voting and Discussion\n\n* **GitHub Issues** - Vote with üëç reactions\n* **GitHub Discussions** - Discuss and refine ideas\n* **Discord** - Real-time discussion\n* **Surveys** - Formal feedback collection\n\n### Feedback Categories\n\n* **High Priority** - Critical issues affecting many users\n* **Medium Priority** - Important improvements\n* **Low Priority** - Nice-to-have features\n* **Future Consideration** - Ideas for future versions\n\n## Recognition\n\n### Feedback Contributors\n\nWe recognize valuable feedback:\n\n* **Contributor badges** on GitHub\n* **Beta tester** recognition\n* **Early access** to new features\n* **Swag** for significant contributions\n\n### Feedback Impact\n\nYour feedback directly influences:\n\n* **Product roadmap** - What we build next\n* **API design** - How endpoints work\n* **Documentation** - What we document\n* **Community** - How we support users\n\n<Cards>\n  <Card title=\"Community\" href=\"/docs/community\" description=\"Join our developer community\" />\n\n  <Card title=\"Support\" href=\"/docs/support\" description=\"Get technical support\" />\n\n  <Card title=\"Feature Requests\" href=\"/docs/feature-requests\" description=\"Request new features\" />\n</Cards>\n"}