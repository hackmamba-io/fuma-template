{"type":"route","meta":{"status":200,"headers":{"content-type":"text/markdown","x-next-cache-tags":"_N_T_/layout,_N_T_/llms.mdx/layout,_N_T_/llms.mdx/[[...slug]]/layout,_N_T_/llms.mdx/[[...slug]]/route,_N_T_/llms.mdx/developer-tools/sdks"}},"body":"# SDKs (/docs/developer-tools/sdks)\n\n# SDKs\n\nOfficial SDKs and client libraries to help you integrate quickly and easily.\n\n## Available SDKs\n\n### JavaScript/Node.js\n\nOur official JavaScript SDK supports both Node.js and browser environments.\n\n#### Installation\n\n```bash\nnpm install @hackmamba/sdk\n```\n\n#### Usage\n\n```javascript\nimport { HackmambaClient } from \"@hackmamba/sdk\";\n\nconst client = new HackmambaClient({\n  apiKey: \"your-api-key\",\n  environment: \"sandbox\", // or 'production'\n});\n\n// Make API calls\nconst users = await client.users.list();\nconst user = await client.users.get(\"user_123\");\n```\n\n#### Browser Usage\n\n```html\n<script src=\"https://cdn.hackmamba.com/sdk/v1/hackmamba.min.js\"></script>\n<script>\n  const client = new HackmambaClient({\n    apiKey: \"your-api-key\",\n  });\n\n  client.users.list().then((users) => {\n    console.log(users);\n  });\n</script>\n```\n\n### Python\n\nOur Python SDK provides a clean, Pythonic interface to our API.\n\n#### Installation\n\n```bash\npip install hackmamba-sdk\n```\n\n#### Usage\n\n```python\nfrom hackmamba import HackmambaClient\n\nclient = HackmambaClient(\n    api_key='your-api-key',\n    environment='sandbox'\n)\n\n# Make API calls\nusers = client.users.list()\nuser = client.users.get('user_123')\n```\n\n### PHP\n\nPHP SDK for server-side applications.\n\n#### Installation\n\n```bash\ncomposer require hackmamba/sdk\n```\n\n#### Usage\n\n```php\n<?php\nrequire_once 'vendor/autoload.php';\n\nuse Hackmamba\\HackmambaClient;\n\n$client = new HackmambaClient([\n    'api_key' => 'your-api-key',\n    'environment' => 'sandbox'\n]);\n\n// Make API calls\n$users = $client->users->list();\n$user = $client->users->get('user_123');\n```\n\n### Ruby\n\nRuby gem for Ruby applications.\n\n#### Installation\n\n```bash\ngem install hackmamba-sdk\n```\n\n#### Usage\n\n```ruby\nrequire 'hackmamba'\n\nclient = Hackmamba::Client.new(\n  api_key: 'your-api-key',\n  environment: 'sandbox'\n)\n\n# Make API calls\nusers = client.users.list\nuser = client.users.get('user_123')\n```\n\n## SDK Features\n\n### Automatic Authentication\n\nAll SDKs handle authentication automatically:\n\n```javascript\n// No need to manually add headers\nconst client = new HackmambaClient({ apiKey: \"your-key\" });\nconst users = await client.users.list(); // Auth handled automatically\n```\n\n### Rate Limit Handling\n\nSDKs automatically handle rate limiting with exponential backoff:\n\n```python\n# SDK automatically retries on rate limit\nusers = client.users.list()  # Handles 429 responses automatically\n```\n\n### Type Safety\n\nTypeScript definitions are included for better development experience:\n\n```typescript\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n  created_at: string;\n}\n\nconst users: User[] = await client.users.list();\n```\n\n### Error Handling\n\nConsistent error handling across all SDKs:\n\n```javascript\ntry {\n  const user = await client.users.get(\"invalid-id\");\n} catch (error) {\n  if (error.code === \"user_not_found\") {\n    console.log(\"User does not exist\");\n  }\n}\n```\n\n## SDK Configuration\n\n### Environment Variables\n\nAll SDKs support environment variables:\n\n```bash\n# Set environment variables\nexport HACKMAMBA_API_KEY=your-api-key\nexport HACKMAMBA_ENVIRONMENT=sandbox\n```\n\n```javascript\n// SDK automatically picks up environment variables\nconst client = new HackmambaClient(); // Uses env vars\n```\n\n### Custom Configuration\n\n```javascript\nconst client = new HackmambaClient({\n  apiKey: \"your-api-key\",\n  environment: \"sandbox\",\n  timeout: 30000, // 30 seconds\n  retries: 3,\n  baseURL: \"https://custom-api.example.com\",\n});\n```\n\n## Examples\n\n### Complete Integration Example\n\n```javascript\nimport { HackmambaClient } from \"@hackmamba/sdk\";\n\nasync function syncUsers() {\n  const client = new HackmambaClient({\n    apiKey: process.env.HACKMAMBA_API_KEY,\n  });\n\n  try {\n    // Get all users\n    const users = await client.users.list();\n\n    // Process each user\n    for (const user of users) {\n      console.log(`Processing user: ${user.name}`);\n\n      // Update user if needed\n      if (user.needsUpdate) {\n        await client.users.update(user.id, {\n          lastSync: new Date().toISOString(),\n        });\n      }\n    }\n\n    console.log(`Synced ${users.length} users successfully`);\n  } catch (error) {\n    console.error(\"Sync failed:\", error.message);\n  }\n}\n```\n\n## Getting Help\n\n<Cards>\n  <Card title=\"API Reference\" href=\"/docs/api-reference\" description=\"Complete API documentation\" />\n\n  <Card title=\"Authentication\" href=\"/docs/authentication\" description=\"Authentication guide\" />\n\n  <Card title=\"Webhooks\" href=\"/docs/webhooks\" description=\"Set up webhooks for real-time updates\" />\n</Cards>\n"}